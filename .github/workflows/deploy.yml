name: Build & Deploy JAR to GCP VMs


  
on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        vm_ip: [34.64.151.197, 34.64.215.144, 34.64.84.23]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven (skip tests)
        run: mvn clean package -DskipTests

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.GCP_SSH_KEY }}

      - name: Add SSH host to known_hosts
        run: ssh-keyscan -H ${{ matrix.vm_ip }} >> ~/.ssh/known_hosts

      ### ✅ 1. 기존 JAR 복사 및 실행
      - name: Copy JAR to GCP VM ${{ matrix.vm_ip }}
        run: |
          scp target/moonpull-0.0.1-SNAPSHOT.jar jaegeon@${{ matrix.vm_ip }}:/home/jaegeon/moonpull/app.jar

      - name: Restart JAR App on GCP VM ${{ matrix.vm_ip }}
        run: |
          ssh jaegeon@${{ matrix.vm_ip }} << 'EOF'
            set -ex
            echo "🔁 기존 JAR 프로세스 종료"
            pkill -f 'java -jar' || true
            echo "🚀 JAR 앱 실행"
            nohup java -jar /home/jaegeon/moonpull/app.jar > /home/jaegeon/moonpull/app.log 2>&1 &
            echo "✅ JAR 배포 완료"
          EOF

      ### ✅ 2. Docker 컨테이너 배포
      - name: Create target directory on VM ${{ matrix.vm_ip }}
        run: |
          ssh jaegeon@${{ matrix.vm_ip }} "mkdir -p /home/jaegeon/moonpull"

      - name: Copy Docker setup to GCP VM ${{ matrix.vm_ip }}
        run: |
          scp Dockerfile docker-compose.yml jaegeon@${{ matrix.vm_ip }}:/home/jaegeon/moonpull/

      - name: Deploy Docker container on GCP VM ${{ matrix.vm_ip }}
        run: |
          ssh jaegeon@${{ matrix.vm_ip }} << 'EOF'
            set -ex
            cd /home/jaegeon/moonpull

            # ✅ docker-compose 설치 (없으면)
            if ! command -v docker-compose &> /dev/null; then
              echo "📦 docker-compose 설치 중..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "🛑 기존 Docker 컨테이너 중지 및 삭제"
            docker-compose down || true

            echo "🚀 Docker 빌드 및 컨테이너 실행"
            docker-compose up --build -d

            echo "✅ Docker 배포 ss완료"
          EOF
